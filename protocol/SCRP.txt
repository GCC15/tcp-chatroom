This is the specification of SCRP (Stupid Chat Room Protocol), a lightweight
application-layer communication protocol used in the project tcp-chatroom (https://github.com/GCC15/tcp-chatroom).

Author:
Zhang NS (https://github.com/zhangns)
Zifan Li (https://github.com/LiZifan)
Zichao Li (https://github.com/kenathe)
All Rights Reserved.

Version: 0.0.2
Revision: 27 Aug 2015

Status: Under development


1. Concepts

  1.1 SCRP System

    An SCRP system consists of one server and zero or more clients.

  1.2 Server

    The server is a computer program which handles requests from clients, and
    manages users, messages, chatrooms, and their interactions.

    Server nickname (Unicode string)

      A short human-readable name of the server, e.g. "My Awesome Server".

    Server version (ASCII string)

      The version of the server, e.g. "1.0.0".

    Server description (Unicode string)

      A description of the server.

    Server protocol version (ASCII string)

      The version of SCRP followed by the server, e.g. "1.0.0".

    Server time (integer)

      The current timestamp as seen from the server.

    Server uptime (integer)

      The timestamp when the server started running.

    Number of users (integer)

    Max number of users (integer)

      The maximum number of users since the server started.

    Number of online users (integer)

    Max number of online users (integer)

      The maximum number of online users since the server started.

    Number of rooms (integer)

    Max number of rooms (integer)

      The maximum number of rooms since the server started.

    Number of messages received (integer)

    Number of messages sent (integer)

    Amount of raw data received in bytes (integer)

      The interpretation of "raw data" can be implementation-dependent.

    Amount of raw data sent in bytes (integer)

      The interpretation of "raw data" can be implementation-dependent.

  1.3 Client

    A client is a computer program, usually with a UI. It receives inputs from
    a human (a user) and communicates with the server accordingly.

    Client nickname (Unicode string)

      A short human-readable name of the client, e.g. "My Awesome Client".

    Client version (ASCII string)

      The version of the client, e.g. "1.0.0".

    Client description (Unicode string)

      A description of the client.

    Client protocol version (ASCII string)

      The version of SCRP followed by the client, e.g. "1.0.0".

    Client time (integer)

      The current timestamp as seen from the client.

  1.4 User

    A user chats (a) with its friends privately, and (b) in chatrooms.

    User ID (ASCII string)

      The identifier of the user, e.g. "john_42". It is valid if and only if (a)
      1 <= length <= 16, (b) it only contains alphanumeric characters
      (case-sensitive) and/or underscore(s), and (c) it is unique.

    User password (ASCII string)

      The login credential of the user, e.g. "my_very_secure_password". It is
      valid if and only if (a) 6 <= length <= 64, and (b) it only contains
      printable ASCII characters, i.e. ASCII code 32 - 126 (0x20 - 0x7E).

    User nickname (Unicode string)

      A short human-readable name of the user, e.g. "John Doe". It is valid if
      and only if 1 <= length <= 16.

    User description (Unicode string)

      The description of the user.

    User sign up time (integer)

      The server time when the user signed up on the server.
      
    Friends (collection of user)
    
      A set of zero or more other users.

  1.5 Room

    A room consists of one or more user. Users send messages in the room.

    Room ID

      The identifier of the room.

    Room nickname

      A short human-readable name of the room.

    Room description

      The description of the room.

    Room admin

      A special type of user in the room. A room has one or more admins.

  1.6 Message

    A message is what a user sends into a room. All other users in the same
    room at the time the message was sent can see the message.

    Message ID

      The identifier of the message.

    Message Room ID

      The Room ID of the room in which the message was sent.

    Message time

      The server time when the message was received by the server.

    Message sender

      The user who sent the message.

2. Request method

  2.1 SIGN_UP

    Sign up a new user.

    Request fields

      user_id

        The ID of the new user.

      user_pass

        The password of the new user.

    Response fields

      err

        {900, 901, 902, 903}

  2.2 LOG_IN

  2.3 LOG_OFF

  2.4 DELETE_ACC

  2.5 CHANGE_PASS
  
  2.6 GET_TIME

  2.7 CREATE_ROOM

  2.8 REMOVE_ROOM

  2.9 REMOVE_USER
  
  2.10 SET_ADMIN

  2.11 ADD_FRIEND

  2.12 REMOVE_FRIEND

3. Errors

  Each type of error has an error number, a name, and a description.

  3.1 900 SUCCESS

     The requested action was performed without errors.

  3.2 901 USER_ALREADY_EXISTS

    User ID already exists.

  3.3 902 INVALID_USER_ID

    The user ID is invalid in format.

  3.4 903 INVALID_USER_PASS

    The user password is invalid.

  3.10 950 WRONG_LOG_IN

    The user ID and the user password do not match.

  3.20 998 BAD_REQUEST

    The request was not understood and was ignored.

  3.21 999 UNKNOWN

    An unexpected error occurred.
